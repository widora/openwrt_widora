#!/bin/sh

ussid=''
upass=''
if [ -n "$QUERY_STRING" ]; then
    echo "Content-Type: application/json"
    echo ""
	firstexp=`echo $QUERY_STRING | cut -d'&' -f 1`
	firstkey=`echo $firstexp | cut -d'=' -f 1`
	firstvalue=`echo $firstexp | cut -d'=' -f 2`

	secondexp=`echo $QUERY_STRING | cut -d'&' -f 2`
	secondkey=`echo $secondexp | cut -d'=' -f 1`
	secondvalue=`echo $secondexp | cut -d'=' -f 2`

	if [ "$firstkey"x = "ssid"x ] && [ "$secondkey"x = "password"x -o "$secondkey"x = "passwd"x ]; then
		ussid=$firstvalue
		upass=$secondvalue
	elif [ "$secondkey"x = "ssid"x ] && [ "$firstkey"x = "password"x -o "$firstkey"x = "passwd"x ]; then
		ussid=$secondvalue
		upass=$firstvalue
	else
		echo "{\"result\"=\"error\",\"message\"=\"Please input the right format like ssid=xxxx&passwd=yyyy\"}"
		exit 1
	fi
   	
elif [ -z "$1" -o -z "$2" ]; then
    	echo "Need to specify ssid and password, like setwifi ssid password"
    	exit 2
else
    	ussid=$1
    	upass=$2
fi
iwpriv ra0 set SiteSurvey=0
sleep 2
OUTPUT=`iwpriv ra0 get_site_survey | grep '^[0-9]'` 
while read line
do
	ssid=`echo $line | awk '{print $2}'`
	if [ "$ssid"x = "$ussid"x ]; then
# 	# Set interfaces file
		umode=""
		uencryp=""

		channel=`echo $line | awk '{print $1}'`
		security=`echo $line | awk '{print $5}'`


		if [ "$security"x = "WPA1PSKWPA2PSK/TKIPAES"x ]; then
			umode="WPA2PSK"
        		uencryp="AES"
		elif [ "$security"x = "WPA1PSKWPA2PSK/AES"x ]; then
			umode="WPA2PSK"
        		uencryp="AES"
		elif [ "$security"x = "WPA2PSK/TKIPAES"x ]; then
			umode="WPA2PSK"
        		uencryp="TKIP"
		elif [ "$security"x = "WPA2PSK/AES"x ]; then
        		umode="WPA2PSK"
        		uencryp="AES"
  	  	elif [ "$security"x = "WPA2PSK/TKIP"x ]; then
        		umode="WPA2PSK"
	        	uencryp="TKIP"
   		elif [ "$security"x = "WPAPSK/TKIPAES"x ]; then
        		umode="WPAPSK"
	        	uencryp="TKIP"
		elif [ "$security"x = "WPAPSK/AES"x ]; then
   			umode="WPAPSK"
        	uencryp="AES"
		elif [ "$security"x = "WPAPSK/TKIP"x ]; then
    		umode="WPAPSK"
        	uencryp="TKIP"
		elif [ "$security"x = "WEP"x ]; then
    		umode="WEP"
        	uencryp="WEP"
   		fi

                uci set wireless.@wifi-iface[0].ApCliSsid=$ussid
                uci set wireless.@wifi-iface[0].ApCliEnable=1
                uci set wireless.@wifi-iface[0].ApCliAuthMode=$umode
                uci set wireless.@wifi-iface[0].ApCliEncrypType=$uencryp
                uci set wireless.@wifi-iface[0].ApCliWPAPSK=$upass
                uci set wireless.mt7628.channel=$channel
                uci set network.wan=interface
                uci set network.wan.ifname=apcli0
                uci set network.wan.proto=dhcp
                uci commit

		        lanip1=`ifconfig br-lan | grep 'inet addr:'| cut -d: -f2 | awk '{ print $1}'|cut -d. -f1`
                lanip2=`ifconfig br-lan | grep 'inet addr:'| cut -d: -f2 | awk '{ print $1}'|cut -d. -f2`
                lanip3=`ifconfig br-lan | grep 'inet addr:'| cut -d: -f2 | awk '{ print $1}'|cut -d. -f3`

 		/etc/init.d/network restart 1>&- 2>&-

		apcli=`ifconfig | grep apcli0`
		while [[ -z "$apcli" ]]
		do
			apcli=`ifconfig | grep apcli0`
		done
		sleep 15

		wanip1=`ifconfig apcli0 | grep 'inet addr:'| cut -d: -f2 | awk '{ print $1}'|cut -d. -f1`
        wanip2=`ifconfig apcli0 | grep 'inet addr:'| cut -d: -f2 | awk '{ print $1}'|cut -d. -f2`
        wanip3=`ifconfig apcli0 | grep 'inet addr:'| cut -d: -f2 | awk '{ print $1}'|cut -d. -f3`
        if [ "$wanip1"x = "$lanip1"x -a "$wanip2"x = "$lanip2"x -a "$wanip3"x = "$lanip3"x ]; then
#                echo WAN IP conflict to LAN IP
                newlanip=$wanip1.$wanip2.`expr $wanip3 + 1`.1
                uci set network.lan.ipaddr=$newlanip
                ifconfig br-lan $newlanip
#                echo set br-lan to $newlanip
                uci commit
        fi
		ip=`ifconfig apcli0 | grep 'inet addr:'| cut -d: -f2 | awk '{ print $1}'`
		if [ $ip ]; then
			echo "{\"result\":\"success\",\"message\":\"connected to $ussid with IP $ip\"}"
		else
			echo "{\"result\":\"error\",\"message\":\"can not connect to $ussid\"}"
		fi

        exit 0
    fi
done <<EOF
$OUTPUT
EOF

echo "{\"result\":\"error\",\"message\":\"can not find WIFI with ssid $ussid\"}"
exit 3
